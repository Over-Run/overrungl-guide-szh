{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OverrunGL \u4f7f\u7528\u624b\u518c \u00b6 \u4e3a OverrunGL \u7f16\u5199\u7684\u4f7f\u7528\u624b\u518c\u3002 \u5982\u679c\u4f60\u8ba4\u4e3a\u672c\u624b\u518c\u6709\u95ee\u9898\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a Issue \u3002 \u5982\u679c\u4f60\u5728\u4f7f\u7528 OverrunGL \u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u53d1\u8d77\u65b0 \u8ba8\u8bba \u3002 \u7b80\u4ecb \u00b6 OverrunGL \u662f\u4f7f\u7528 Java 20 \u7f16\u5199\u7684\u672c\u673a\u7ed1\u5b9a\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e0e C \u5e93\u4ea4\u4e92\u7684\u80fd\u529b\u3002 OverrunGL \u4f7f\u7528\u4e86\u6700\u65b0\u7684 FFM API \uff0c\u5b83\u4f7f\u6211\u4eec\u65e0\u9700\u7f16\u5199\u4efb\u4f55 C \u4ee3\u7801\u5373\u53ef\u8c03\u7528\u672c\u673a\u5e93\u3002 OverrunGL \u65e8\u5728\u4ee4\u65b9\u6cd5\u8c03\u7528\u66f4\u7c7b\u4f3c\u4e8e\u7eaf Java\u3002\u4ee5\u4e0b\u662f\u4e00\u6bb5 FFM API \u4e0e GLFW \u6a21\u5757\u7ed3\u5408\u4f7f\u7528\u7684\u4f8b\u5b50\uff1a import java.lang.foreign.MemorySegment; // imports... class Example { private static MemorySegment windowHandle; public static void main(String[] args) { // init... try (Arena arena = Arena.openShared()) { windowHandle = GLFW.createWindow(arena, 800, 600, \"Example\", MemorySegment.NULL, MemorySegment.NULL); } // ...terminate } } \u6211\u4eec\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\u8be6\u7ec6\u8bb2\u89e3\u5404\u4e2a\u6a21\u5757\u4e0e\u672c\u673a\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002","title":"\u524d\u8a00"},{"location":"#overrungl","text":"\u4e3a OverrunGL \u7f16\u5199\u7684\u4f7f\u7528\u624b\u518c\u3002 \u5982\u679c\u4f60\u8ba4\u4e3a\u672c\u624b\u518c\u6709\u95ee\u9898\uff0c\u8bf7\u521b\u5efa\u4e00\u4e2a Issue \u3002 \u5982\u679c\u4f60\u5728\u4f7f\u7528 OverrunGL \u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff0c\u8bf7\u53d1\u8d77\u65b0 \u8ba8\u8bba \u3002","title":"OverrunGL \u4f7f\u7528\u624b\u518c"},{"location":"#_1","text":"OverrunGL \u662f\u4f7f\u7528 Java 20 \u7f16\u5199\u7684\u672c\u673a\u7ed1\u5b9a\u5e93\uff0c\u63d0\u4f9b\u4e86\u4e0e C \u5e93\u4ea4\u4e92\u7684\u80fd\u529b\u3002 OverrunGL \u4f7f\u7528\u4e86\u6700\u65b0\u7684 FFM API \uff0c\u5b83\u4f7f\u6211\u4eec\u65e0\u9700\u7f16\u5199\u4efb\u4f55 C \u4ee3\u7801\u5373\u53ef\u8c03\u7528\u672c\u673a\u5e93\u3002 OverrunGL \u65e8\u5728\u4ee4\u65b9\u6cd5\u8c03\u7528\u66f4\u7c7b\u4f3c\u4e8e\u7eaf Java\u3002\u4ee5\u4e0b\u662f\u4e00\u6bb5 FFM API \u4e0e GLFW \u6a21\u5757\u7ed3\u5408\u4f7f\u7528\u7684\u4f8b\u5b50\uff1a import java.lang.foreign.MemorySegment; // imports... class Example { private static MemorySegment windowHandle; public static void main(String[] args) { // init... try (Arena arena = Arena.openShared()) { windowHandle = GLFW.createWindow(arena, 800, 600, \"Example\", MemorySegment.NULL, MemorySegment.NULL); } // ...terminate } } \u6211\u4eec\u5c06\u5728\u63a5\u4e0b\u6765\u7684\u7ae0\u8282\u4e2d\u8be6\u7ec6\u8bb2\u89e3\u5404\u4e2a\u6a21\u5757\u4e0e\u672c\u673a\u4ea4\u4e92\u7684\u65b9\u5f0f\u3002","title":"\u7b80\u4ecb"},{"location":"module/core/","text":"\u6838\u5fc3\u6a21\u5757 \u00b6 \u6838\u5fc3 (Core) \u6a21\u5757\uff0c\u662f OverrunGL \u5404\u4e2a\u6a21\u5757\u7684\u57fa\u7840\u3002 \u6211\u4eec\u4e3a\u6838\u5fc3\u6a21\u5757\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u57fa\u672c API\uff1a MemoryStack MemoryUtil RuntimeHelper \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86 Configurations \uff0c\u4f9b\u5f00\u53d1\u8005\u8bbe\u7f6e\u5185\u90e8\u53c2\u6570\u3002 MemoryStack \u00b6 \u7531\u4e8e\u76ee\u524d FFM API \u5e76\u672a\u63d0\u4f9b\u6808\u64cd\u4f5c API\uff0c\u56e0\u6b64\u6211\u4eec\u63d0\u4f9b\u4e86\u4e0e LWJGL \u76f8\u4f3c\u7684 MemoryStack \u3002 MemoryStack \u5141\u8bb8\u6211\u4eec\u8fdb\u884c\u4e00\u6b21\u6027\u3001\u5feb\u901f\u7684\u5c0f\u5806\u5185\u5b58\u5206\u914d\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4e3a OpenGL \u4e2d\u5e38\u89c1\u7684\u6808\u64cd\u4f5c\uff1a unsigned int texture; glGenTextures(1, &texture); // use the texture \u663e\u7136\u5728 Java \u4e2d\u6211\u4eec\u6ca1\u6709\u6307\u9488\uff0c\u65e0\u6cd5\u76f4\u63a5\u4f20\u5165\u503c\u7c7b\u578b\u4fee\u6539\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u501f\u52a9 MemoryStack \u5b8c\u6210\u4ee5\u4e0a\u64cd\u4f5c\uff1a int texture; try (MemoryStack stack = MemoryStack.stackPush()) { MemorySegment segment = stack.malloc(ValueLayout.JAVA_INT); GL.genTextures(1, segment); texture = segment.get(ValueLayout.JAVA_INT, 0); } // use the texture Hint \u6ce8\u610f ValueLayout.JAVA_INT \u662f FFM API\u9488\u5bf9\u76ee\u524d\u901a\u7528\u6cdb\u578b\u5c1a\u672a\u52a0\u5165\u7684\u60c5\u51b5\u4e0b\u4e34\u65f6\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u7684\u7c7b\u578b\u4e3a ValueLayout.OfInt \u3002 \u672a\u6765\uff0c\u901a\u7528\u6cdb\u578b\u52a0\u5165\u65f6\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u53d8\u6210\u4e0b\u9762\u8fd9\u6837\uff1a int texture; try (MemoryStack stack = MemoryStack.stackPush()) { MemorySegment segment = stack.<int>malloc(); GL.genTextures(1, segment); texture = segment.<int>get(0); } // use the texture MemoryStack \u8fd8\u5b9e\u73b0\u4e86 SegmentAllocator \uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u80fd\u591f\u5c06 MemoryStack \u76f4\u63a5\u4f20\u5165\u53c2\u6570\u3002 import java.lang.foreign.MemorySegment; // imports... class Example { private static MemorySegment windowHandle; public static void main(String[] args) { // init... try (MemoryStack stack = MemoryStack.stackPush()) { // \u8bf7\u6ce8\u610f\u53ea\u6709\u5c0f\u5806\u5185\u5b58\u624d\u80fd\u4f7f\u7528 MemoryStack \u5206\u914d\uff0c // \u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8d85\u8fc7\u4e86\u6808\u7684\u5927\u5c0f\u4f1a\u5bfc\u81f4 OutOfMemoryError\u3002 windowHandle = GLFW.createWindow(stack, 800, 600, \"Example\", MemorySegment.NULL, MemorySegment.NULL); } // ...terminate } } MemoryStack \u9ed8\u8ba4\u5927\u5c0f\u53ef\u901a\u8fc7\u8bbe\u7f6e Configurations.STACK_SIZE \u4fee\u6539\u3002 STACK_SIZE \u5355\u4f4d\u4e3aKiB\u3002 \u8c03\u7528 stackPush \u65f6\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u5927\u5c0f\u521b\u5efa\u4e00\u4e2a\u5806\u6808\uff0c\u6216\u8005\u590d\u7528\u4e4b\u524d\u7684\u5806\u6808\u3002 \u4f7f\u7528 create(long) \u663e\u5f0f\u6307\u5b9a\u521b\u5efa\u5806\u6808\u7684\u5927\u5c0f\u3002 \u901a\u8fc7\u8bbe\u7f6e Configurations.DEBUG_STACK \uff0c\u542f\u7528\u6216\u7981\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u6b64\u914d\u7f6e\u5fc5\u987b\u5728\u9996\u4e2a MemoryStack \u521b\u5efa\u524d\u8bbe\u7f6e\u3002 MemoryUtil \u00b6 Note \u5c3d\u7ba1\u6211\u4eec\u63d0\u4f9b\u4e86 MemoryUtil \uff0c\u4f46\u662f\u9664\u975e\u975e\u5e38\u9700\u8981\u6027\u80fd\uff0c\u5426\u5219\u4ecd\u7136\u63a8\u8350\u4f7f\u7528 Arena \u3002 Important \u4f7f\u7528 MemoryUtil \u5206\u914d\u7684\u5185\u5b58\u5fc5\u987b\u663e\u5f0f\u91ca\u653e\uff0c\u5426\u5219\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\uff01 \u5e78\u8fd0\u7684\u662f\uff0c\u901a\u8fc7\u8bbe\u7f6e Configurations.DEBUG_MEM_UTIL \uff0c\u6211\u4eec\u80fd\u591f\u5feb\u901f\u5b9a\u4f4d\u5185\u5b58\u6cc4\u9732\u4f4d\u7f6e\u3002 MemoryUtil \u662f C \u6807\u51c6\u5185\u5b58\u5206\u914d\u51fd\u6570\u7684\u7ed1\u5b9a\uff0c\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e C \u4e00\u81f4\u3002 // import static ... MemorySegment segment = malloc(ValueLayout.JAVA_LONG); // \u6b63\u5e38\u60c5\u51b5\u4e0b\u8fd4\u56de\u503c\u4e0d\u4f1a\u4e3a NULL\uff0c\u6b64\u5904\u4ec5\u4f5c\u793a\u4f8b if (segment.address() == RuntimeHelper.NULL) { throw new OutOfMemoryError(); } segment.set(ValueLayout.JAVA_LONG, 0, 42L); System.out.println(segment.get(ValueLayout.JAVA_LONG, 0)); // \u91cd\u8981\uff01 free(segment); RuntimeHelper \u00b6 Warning RuntimeHelper \u4e3a\u5e95\u5c42\u5185\u5bb9\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u505a\u4ec0\u4e48\uff0c\u8bf7\u8df3\u8fc7\u8fd9\u4e00\u8282\u3002 API Logger \u00b6 OverrunGL \u5185\u90e8\u4f7f\u7528\u540d\u4e3a apiLogger \u7684 Consumer \u6765\u6253\u5370\u5185\u90e8\u6d88\u606f\u3002 \u8981\u5c06 apiLogger \u8bbe\u7f6e\u4e3a\u4f60\u81ea\u5df1\u7684 logger\uff08\u4f8b\u5982 slf4j\uff09\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a RuntimeHelper.setApiLogger(logger::warn); Downcall Handle \u00b6 FFM API\u5c06\u672c\u673a\u51fd\u6570\u8f6c\u6362\u4e3a MethodHandle \u4ee5\u4fbf\u6211\u4eec\u5728 Java \u4e2d\u8c03\u7528\u3002 \u5173\u4e8e\u8fd9\u90e8\u5206\u7684\u8be6\u7ec6\u8bf4\u660e\u8bf7\u89c1\u524d\u8a00\u4e2d\u94fe\u63a5\u7684 JEP \u9875\u9762\u3002 toArray \u00b6 RuntimeHelper \u63d0\u4f9b\u4e86 toArray \u65b9\u6cd5\u53ca\u5176\u91cd\u8f7d\u3002 toArray \u5c06 MemorySegment \u4e2d\u7684\u5185\u5bb9\u8bfb\u53d6\u5230\u6570\u7ec4\u4e2d\u3002","title":"\u6838\u5fc3"},{"location":"module/core/#_1","text":"\u6838\u5fc3 (Core) \u6a21\u5757\uff0c\u662f OverrunGL \u5404\u4e2a\u6a21\u5757\u7684\u57fa\u7840\u3002 \u6211\u4eec\u4e3a\u6838\u5fc3\u6a21\u5757\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u57fa\u672c API\uff1a MemoryStack MemoryUtil RuntimeHelper \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86 Configurations \uff0c\u4f9b\u5f00\u53d1\u8005\u8bbe\u7f6e\u5185\u90e8\u53c2\u6570\u3002","title":"\u6838\u5fc3\u6a21\u5757"},{"location":"module/core/#memorystack","text":"\u7531\u4e8e\u76ee\u524d FFM API \u5e76\u672a\u63d0\u4f9b\u6808\u64cd\u4f5c API\uff0c\u56e0\u6b64\u6211\u4eec\u63d0\u4f9b\u4e86\u4e0e LWJGL \u76f8\u4f3c\u7684 MemoryStack \u3002 MemoryStack \u5141\u8bb8\u6211\u4eec\u8fdb\u884c\u4e00\u6b21\u6027\u3001\u5feb\u901f\u7684\u5c0f\u5806\u5185\u5b58\u5206\u914d\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u4e3a OpenGL \u4e2d\u5e38\u89c1\u7684\u6808\u64cd\u4f5c\uff1a unsigned int texture; glGenTextures(1, &texture); // use the texture \u663e\u7136\u5728 Java \u4e2d\u6211\u4eec\u6ca1\u6709\u6307\u9488\uff0c\u65e0\u6cd5\u76f4\u63a5\u4f20\u5165\u503c\u7c7b\u578b\u4fee\u6539\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u501f\u52a9 MemoryStack \u5b8c\u6210\u4ee5\u4e0a\u64cd\u4f5c\uff1a int texture; try (MemoryStack stack = MemoryStack.stackPush()) { MemorySegment segment = stack.malloc(ValueLayout.JAVA_INT); GL.genTextures(1, segment); texture = segment.get(ValueLayout.JAVA_INT, 0); } // use the texture Hint \u6ce8\u610f ValueLayout.JAVA_INT \u662f FFM API\u9488\u5bf9\u76ee\u524d\u901a\u7528\u6cdb\u578b\u5c1a\u672a\u52a0\u5165\u7684\u60c5\u51b5\u4e0b\u4e34\u65f6\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5b83\u7684\u7c7b\u578b\u4e3a ValueLayout.OfInt \u3002 \u672a\u6765\uff0c\u901a\u7528\u6cdb\u578b\u52a0\u5165\u65f6\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u53d8\u6210\u4e0b\u9762\u8fd9\u6837\uff1a int texture; try (MemoryStack stack = MemoryStack.stackPush()) { MemorySegment segment = stack.<int>malloc(); GL.genTextures(1, segment); texture = segment.<int>get(0); } // use the texture MemoryStack \u8fd8\u5b9e\u73b0\u4e86 SegmentAllocator \uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u80fd\u591f\u5c06 MemoryStack \u76f4\u63a5\u4f20\u5165\u53c2\u6570\u3002 import java.lang.foreign.MemorySegment; // imports... class Example { private static MemorySegment windowHandle; public static void main(String[] args) { // init... try (MemoryStack stack = MemoryStack.stackPush()) { // \u8bf7\u6ce8\u610f\u53ea\u6709\u5c0f\u5806\u5185\u5b58\u624d\u80fd\u4f7f\u7528 MemoryStack \u5206\u914d\uff0c // \u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8d85\u8fc7\u4e86\u6808\u7684\u5927\u5c0f\u4f1a\u5bfc\u81f4 OutOfMemoryError\u3002 windowHandle = GLFW.createWindow(stack, 800, 600, \"Example\", MemorySegment.NULL, MemorySegment.NULL); } // ...terminate } } MemoryStack \u9ed8\u8ba4\u5927\u5c0f\u53ef\u901a\u8fc7\u8bbe\u7f6e Configurations.STACK_SIZE \u4fee\u6539\u3002 STACK_SIZE \u5355\u4f4d\u4e3aKiB\u3002 \u8c03\u7528 stackPush \u65f6\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u5927\u5c0f\u521b\u5efa\u4e00\u4e2a\u5806\u6808\uff0c\u6216\u8005\u590d\u7528\u4e4b\u524d\u7684\u5806\u6808\u3002 \u4f7f\u7528 create(long) \u663e\u5f0f\u6307\u5b9a\u521b\u5efa\u5806\u6808\u7684\u5927\u5c0f\u3002 \u901a\u8fc7\u8bbe\u7f6e Configurations.DEBUG_STACK \uff0c\u542f\u7528\u6216\u7981\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u6b64\u914d\u7f6e\u5fc5\u987b\u5728\u9996\u4e2a MemoryStack \u521b\u5efa\u524d\u8bbe\u7f6e\u3002","title":"MemoryStack"},{"location":"module/core/#memoryutil","text":"Note \u5c3d\u7ba1\u6211\u4eec\u63d0\u4f9b\u4e86 MemoryUtil \uff0c\u4f46\u662f\u9664\u975e\u975e\u5e38\u9700\u8981\u6027\u80fd\uff0c\u5426\u5219\u4ecd\u7136\u63a8\u8350\u4f7f\u7528 Arena \u3002 Important \u4f7f\u7528 MemoryUtil \u5206\u914d\u7684\u5185\u5b58\u5fc5\u987b\u663e\u5f0f\u91ca\u653e\uff0c\u5426\u5219\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\uff01 \u5e78\u8fd0\u7684\u662f\uff0c\u901a\u8fc7\u8bbe\u7f6e Configurations.DEBUG_MEM_UTIL \uff0c\u6211\u4eec\u80fd\u591f\u5feb\u901f\u5b9a\u4f4d\u5185\u5b58\u6cc4\u9732\u4f4d\u7f6e\u3002 MemoryUtil \u662f C \u6807\u51c6\u5185\u5b58\u5206\u914d\u51fd\u6570\u7684\u7ed1\u5b9a\uff0c\u5b83\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e C \u4e00\u81f4\u3002 // import static ... MemorySegment segment = malloc(ValueLayout.JAVA_LONG); // \u6b63\u5e38\u60c5\u51b5\u4e0b\u8fd4\u56de\u503c\u4e0d\u4f1a\u4e3a NULL\uff0c\u6b64\u5904\u4ec5\u4f5c\u793a\u4f8b if (segment.address() == RuntimeHelper.NULL) { throw new OutOfMemoryError(); } segment.set(ValueLayout.JAVA_LONG, 0, 42L); System.out.println(segment.get(ValueLayout.JAVA_LONG, 0)); // \u91cd\u8981\uff01 free(segment);","title":"MemoryUtil"},{"location":"module/core/#runtimehelper","text":"Warning RuntimeHelper \u4e3a\u5e95\u5c42\u5185\u5bb9\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u505a\u4ec0\u4e48\uff0c\u8bf7\u8df3\u8fc7\u8fd9\u4e00\u8282\u3002","title":"RuntimeHelper"},{"location":"module/core/#api-logger","text":"OverrunGL \u5185\u90e8\u4f7f\u7528\u540d\u4e3a apiLogger \u7684 Consumer \u6765\u6253\u5370\u5185\u90e8\u6d88\u606f\u3002 \u8981\u5c06 apiLogger \u8bbe\u7f6e\u4e3a\u4f60\u81ea\u5df1\u7684 logger\uff08\u4f8b\u5982 slf4j\uff09\uff0c\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a RuntimeHelper.setApiLogger(logger::warn);","title":"API Logger"},{"location":"module/core/#downcall-handle","text":"FFM API\u5c06\u672c\u673a\u51fd\u6570\u8f6c\u6362\u4e3a MethodHandle \u4ee5\u4fbf\u6211\u4eec\u5728 Java \u4e2d\u8c03\u7528\u3002 \u5173\u4e8e\u8fd9\u90e8\u5206\u7684\u8be6\u7ec6\u8bf4\u660e\u8bf7\u89c1\u524d\u8a00\u4e2d\u94fe\u63a5\u7684 JEP \u9875\u9762\u3002","title":"Downcall Handle"},{"location":"module/core/#toarray","text":"RuntimeHelper \u63d0\u4f9b\u4e86 toArray \u65b9\u6cd5\u53ca\u5176\u91cd\u8f7d\u3002 toArray \u5c06 MemorySegment \u4e2d\u7684\u5185\u5bb9\u8bfb\u53d6\u5230\u6570\u7ec4\u4e2d\u3002","title":"toArray"},{"location":"module/glfw/","text":"GLFW \u6a21\u5757 \u00b6","title":"GLFW"},{"location":"module/glfw/#glfw","text":"","title":"GLFW \u6a21\u5757"},{"location":"module/joml/","text":"JOML \u6a21\u5757 \u00b6 JOML \u6a21\u5757\u8d1f\u8d23\u5c06 JOML \u4e2d\u7684\u503c\u7c7b\u578b\u8f6c\u6362\u4e3a MemorySegment \u3002 \u5206\u914d\u5185\u5b58 \u00b6 allocate \u65b9\u6cd5\u4e3a\u503c\u7c7b\u578b\u5206\u914d\u5185\u5b58\u3002\u5185\u5b58\u7684\u751f\u547d\u5468\u671f\u4e0e\u5206\u914d\u5668\u4e00\u81f4\u3002 Matrix4f projection = new Matrix4f().setOrtho2D(0, width, 0, height); MemorySegment segment = Matrixn.allocate(SegmentAllocator.nativeAllocator(SegmentScope.auto()), projection); GL.uniformMatrix4fv(uProjection, 1, false, segment); malloc \u65b9\u6cd5\u91cd\u8f7d\u5219\u4f7f\u7528 MemoryUtil \u6216 MemoryStack \u3002 put \u00b6","title":"JOML"},{"location":"module/joml/#joml","text":"JOML \u6a21\u5757\u8d1f\u8d23\u5c06 JOML \u4e2d\u7684\u503c\u7c7b\u578b\u8f6c\u6362\u4e3a MemorySegment \u3002","title":"JOML \u6a21\u5757"},{"location":"module/joml/#_1","text":"allocate \u65b9\u6cd5\u4e3a\u503c\u7c7b\u578b\u5206\u914d\u5185\u5b58\u3002\u5185\u5b58\u7684\u751f\u547d\u5468\u671f\u4e0e\u5206\u914d\u5668\u4e00\u81f4\u3002 Matrix4f projection = new Matrix4f().setOrtho2D(0, width, 0, height); MemorySegment segment = Matrixn.allocate(SegmentAllocator.nativeAllocator(SegmentScope.auto()), projection); GL.uniformMatrix4fv(uProjection, 1, false, segment); malloc \u65b9\u6cd5\u91cd\u8f7d\u5219\u4f7f\u7528 MemoryUtil \u6216 MemoryStack \u3002","title":"\u5206\u914d\u5185\u5b58"},{"location":"module/joml/#put","text":"","title":"put"},{"location":"module/opengl/","text":"GL \u6a21\u5757 \u00b6","title":"GL"},{"location":"module/opengl/#gl","text":"","title":"GL \u6a21\u5757"},{"location":"module/stb/","text":"STB \u6a21\u5757 \u00b6","title":"STB"},{"location":"module/stb/#stb","text":"","title":"STB \u6a21\u5757"}]}